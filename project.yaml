specVersion: "1.0.0"

name: "Base-subql-starter"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-ethereum"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This project can be use as a starting point for developing your new Base SubQuery project, it indexes all drips from USDC faucet contract"
repository: "https://github.com/subquery/subquery-example-base-faucet"

schema:
  file: "./schema.graphql"

network:
  # chainId is the EVM Chain ID, for Base Goerli this is 84531
  # https://chainlist.org/chain/84531
  chainId: "84531"
  # This endpoint must be a public non-pruned archive node
  # We recommend providing more than one endpoint for improved reliability, performance, and uptime
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from OnFinality for free https://app.onfinality.io
  # https://documentation.onfinality.io/support/the-enhanced-api-service
  endpoint: ["https://goerli.base.org"]
  # Recommended to provide the HTTP endpoint of a full chain dictionary to speed up processing
  # dictionary: "https://api.subquery.network/sq/subquery/base-goerli-dictionary"

dataSources:
  - kind: ethereum/Runtime # We use ethereum runtime since Base Goerli is a layer-2 that is EVM-compatible
    startBlock: 1512049 # The block at which this contract was created
    options:
      # Must be a key of assets
      abi: faucet_abi
      address: "0x298e0B0a38fF8B99bf1a3b697B0efB2195cfE47D" # this is the contract address for USDC faucet on Base Goerli https://goerli.basescan.org/address/0x298e0b0a38ff8b99bf1a3b697b0efb2195cfe47d
    assets:
      faucet_abi:
        file: "./abis/faucet.abi.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleDrip
          kind: ethereum/TransactionHandler # We use ethereum handlers since Base Goerli is EVM-Compatible
          filter:
            ## The function can either be the function fragment or signature
            function: "0x6c81bd54"
            # function: '0x7ff36ab500000000000000000000000000000000000000000000000000000000'
            # function: drip(address token, uint256 amount, address receiver)
        # - handler: handleLog
        # kind: ethereum/LogHandler # We use ethereum handlers since Base Goerli is EVM-Compatible
        # filter:
        # topics:
        ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
        # - Transfer(address indexed from, address indexed to, uint256 amount)
        # address: "0x60781C2586D68229fde47564546784ab3fACA982"
